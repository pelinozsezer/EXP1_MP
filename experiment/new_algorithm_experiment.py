# import libraries#!pip install psychopyimport osimport sysimport timeimport numpy as npimport pandas as pdimport matplotlib.pyplot as pltimport mathfrom psychopy import gui, core, visual, eventfrom psychopy.gui import DlgFromDictfrom psychopy.core import Clock, quit, waitfrom psychopy.visual import Windowfrom psychopy.hardware import keyboardfrom psychopy.event import Mouse# COLORScolor_gray = [0, 0, 0]color_quartets = [0.9, 0.9, 0.9]  # close to white# window settings#win = visual.Window(size=[1792, 1120], color=color_gray) #units="pix", screen = 0, fullscr=False, allowGUI=True # personal laptop# units="pix", screen = 0, fullscr=False, allowGUI=True # work laptopwin = visual.Window(size=[1512, 982], color=color_gray, units="pix")# keyboard settingskb = keyboard.Keyboard()keys = kb.getKeys(['z', 'm', 'space'], waitRelease=True)## PARAMETERS ##scaler = 1n_trials_training = 4corr_resp_training = 0accuracy_training = 0block_number_experiment = 1trial_number_experiment = 10# MQ parametersstimulus_size =  10*scalerfreq = 2  # 1 cycle or freq is when all the quartets have been shown.# height# widthvalues = range(10,110,10)for width in values:            keyPressed_1back    if keyPressed_1back==keyPressed_2back:        continue    elif keyPressed_1back != keyPressed_2back AND keyPressed_1back= m or z # percept change        keyPressed_1back=keyPressed_2back        width_idx        # continue until width_idx+1        for width in reverse values                            keyPressed_1back            if keyPressed_1back==keyPressed_2back:                continue            elif keyPressed_1back != keyPressed_2back AND keyPressed_1back= m or z # percept change                keyPressed_1back=keyPressed_2back                width_idx                # continue until width_idx+1                height=width_idx+1                 flag_exit_width=1                break    elif flag_exit_width==1:        break        